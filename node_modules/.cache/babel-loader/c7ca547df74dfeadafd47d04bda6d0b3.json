{"ast":null,"code":"var _jsxFileName = \"/Users/Hitesh/Desktop/DiveIn/dive-in/src/components/card/Card.js\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { connect } from \"react-redux\";\nimport updatePosts from \"../../store/actions/updatePosts\";\nimport fetchUsers from \"../../store/actions/fetchUsers\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n});\n\nfunction MediaCard(props) {\n  const classes = useStyles(); // Similar to componentDidMount and componentDidUpdate:\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    props.fetchUsers();\n  }, []);\n  console.log(props.users);\n  const {\n    users\n  } = props;\n  console.log(users, \"data in props\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, users.map(user => /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: user.imageUrl,\n    title: \"Contemplative Reptile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, user.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, user.description))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: props.fetchUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"Share\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Learn More\"))))));\n} //Make State accessible to movies and users in App.\n\n\nconst MapStateToProps = state => {\n  return {\n    posts: state.posts,\n    users: state.users\n  };\n}; // Setup Dispatch for our button events.\n\n\nconst MapDispatchToProps = dispatch => {\n  return {\n    updatePosts: () => dispatch(updatePosts),\n    fetchUsers: () => dispatch(fetchUsers)\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(MediaCard); // (\n//   <div>\n//   <div className=\"parent-card\">\n//     {cardData &&\n//    cardData.users &&\n//     cardData.users.map(user => <div className=\"card-box\">{\n//       // <a href={\"/Productsdetails/\" + user.productId}>\n//       <React.Fragment key={user.productId}>\n//         {/* <Container fixed> */}\n//         <Card className={classes.root} onClick={() => cardClickHandler(user)}>\n//                   <CardHeader\n//                     avatar={\n//                       <Avatar aria-label=\"recipe\" className={classes.avatar}>\n//                         R\n//                       </Avatar>\n//                     }\n//                     action={\n//                       <IconButton aria-label=\"settings\">\n//                         <MoreVertIcon />\n//                       </IconButton>\n//                     }\n//                     title={user.productName}\n//                     subheader=\"September 14, 2016\"\n//                   />\n//                   <CardMedia\n//                     className={classes.media}\n//                     image=\"https://i.ibb.co/WzKrhhB/960x0.jpg\"\n//                     title=\"walmart\"\n//                   />\n//                   <CardContent className=\"short-desc\">\n//                     <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n//                     {user.shortDescription}\n//                     </Typography>\n//                   </CardContent>\n//                   <CardContent className=\"card-info\">\n//                     <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n//                     Price : {user.price}\n//                     </Typography>\n//                     <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n//                       Rating : {user.reviewRating}\n//                     </Typography>\n//                     <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n//                       Review Count : {user.reviewCount}\n//                     </Typography>\n//                   </CardContent>\n//                 </Card>\n//         {/* </Container> */}\n//       </React.Fragment>\n//       // </a>\n//       }</div>)\n//       }\n//   </div>\n//       <PaginationControlled/>\n//   </div>","map":{"version":3,"sources":["/Users/Hitesh/Desktop/DiveIn/dive-in/src/components/card/Card.js"],"names":["React","useEffect","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","connect","updatePosts","fetchUsers","useStyles","root","maxWidth","media","height","MediaCard","props","classes","console","log","users","map","user","imageUrl","name","description","MapStateToProps","state","posts","MapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { connect } from \"react-redux\";\nimport updatePosts from \"../../store/actions/updatePosts\";\nimport fetchUsers from \"../../store/actions/fetchUsers\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nfunction MediaCard(props) {\n  const classes = useStyles();\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    // Update the document title using the browser API\n    props.fetchUsers();\n  }, []);\n  console.log(props.users);\n  const { users } = props;\n  console.log(users, \"data in props\");\n  return (\n    <div>\n      {users.map((user) => (\n        <React.Fragment>\n          <Card className={classes.root}>\n            <CardActionArea>\n              <CardMedia\n                className={classes.media}\n                image={user.imageUrl}\n                title=\"Contemplative Reptile\"\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {user.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {user.description}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\" onClick={props.fetchUsers}>\n                Share\n              </Button>\n              <Button size=\"small\" color=\"primary\">\n                Learn More\n              </Button>\n            </CardActions>\n          </Card>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n\n//Make State accessible to movies and users in App.\nconst MapStateToProps = (state) => {\n  return {\n    posts: state.posts,\n    users: state.users,\n  };\n};\n\n// Setup Dispatch for our button events.\nconst MapDispatchToProps = (dispatch) => {\n  return {\n    updatePosts: () => dispatch(updatePosts),\n    fetchUsers: () => dispatch(fetchUsers),\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(MediaCard);\n\n// (\n\n//   <div>\n//   <div className=\"parent-card\">\n\n//     {cardData &&\n//    cardData.users &&\n//     cardData.users.map(user => <div className=\"card-box\">{\n\n//       // <a href={\"/Productsdetails/\" + user.productId}>\n//       <React.Fragment key={user.productId}>\n//         {/* <Container fixed> */}\n\n//         <Card className={classes.root} onClick={() => cardClickHandler(user)}>\n//                   <CardHeader\n//                     avatar={\n//                       <Avatar aria-label=\"recipe\" className={classes.avatar}>\n//                         R\n//                       </Avatar>\n//                     }\n//                     action={\n//                       <IconButton aria-label=\"settings\">\n//                         <MoreVertIcon />\n//                       </IconButton>\n//                     }\n//                     title={user.productName}\n//                     subheader=\"September 14, 2016\"\n//                   />\n//                   <CardMedia\n//                     className={classes.media}\n//                     image=\"https://i.ibb.co/WzKrhhB/960x0.jpg\"\n//                     title=\"walmart\"\n//                   />\n//                   <CardContent className=\"short-desc\">\n//                     <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n//                     {user.shortDescription}\n//                     </Typography>\n//                   </CardContent>\n//                   <CardContent className=\"card-info\">\n//                     <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n//                     Price : {user.price}\n\n//                     </Typography>\n//                     <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n//                       Rating : {user.reviewRating}\n//                     </Typography>\n//                     <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n//                       Review Count : {user.reviewCount}\n//                     </Typography>\n//                   </CardContent>\n//                 </Card>\n//         {/* </Container> */}\n//       </React.Fragment>\n//       // </a>\n//       }</div>)\n//       }\n//   </div>\n//       <PaginationControlled/>\n//   </div>\n"]},"metadata":{},"sourceType":"module"}