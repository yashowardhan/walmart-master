{"ast":null,"code":"var _jsxFileName = \"/Users/Hitesh/Desktop/DiveIn/dive-in/src/components/common/Tags.js\";\n// import React, { useEffect } from \"react\";\n// import { connect } from \"react-redux\";\n// import fetchTopics from \"../../store/actions/fetchTopics\";\n// import clsx from \"clsx\";\n// import { makeStyles, useTheme } from \"@material-ui/core/styles\";\n// import Input from \"@material-ui/core/Input\";\n// import InputLabel from \"@material-ui/core/InputLabel\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\n// import FormControl from \"@material-ui/core/FormControl\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\n// import Select from \"@material-ui/core/Select\";\n// import Checkbox from \"@material-ui/core/Checkbox\";\n// import Chip from \"@material-ui/core/Chip\";\n// const useStyles = makeStyles((theme) => ({\n//   formControl: {\n//     margin: theme.spacing(1),\n//     minWidth: 120,\n//     maxWidth: 300,\n//   },\n//   chips: {\n//     display: \"flex\",\n//     flexWrap: \"wrap\",\n//   },\n//   chip: {\n//     margin: 2,\n//   },\n//   noLabel: {\n//     marginTop: theme.spacing(3),\n//   },\n// }));\n// const ITEM_HEIGHT = 48;\n// const ITEM_PADDING_TOP = 8;\n// const MenuProps = {\n//   PaperProps: {\n//     style: {\n//       maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n//       width: 250,\n//     },\n//   },\n// };\n// const names = [\n//   \"Oliver Hansen\",\n//   \"Van Henry\",\n//   \"April Tucker\",\n//   \"Ralph Hubbard\",\n//   \"Omar Alexander\",\n//   \"Carlos Abbott\",\n//   \"Miriam Wagner\",\n//   \"Bradley Wilkerson\",\n//   \"Virginia Andrews\",\n//   \"Kelly Snyder\",\n// ];\n// function getStyles(name, personName, theme) {\n//   return {\n//     fontWeight:\n//       personName.indexOf(name) === -1\n//         ? theme.typography.fontWeightRegular\n//         : theme.typography.fontWeightMedium,\n//   };\n// }\n// function Tags(props) {\n//   useEffect(() => {\n//     // Update the document title using the browser API\n//     props.fetchTopics();\n//   }, []);\n//   console.log(props.topics, \"articles working cool\");\n//   const { topics } = props;\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [personName, setPersonName] = React.useState([]);\n//   const handleChange = (event) => {\n//     setPersonName(event.target.value);\n//   };\n//   const handleChangeMultiple = (event) => {\n//     const { options } = event.target;\n//     const value = [];\n//     for (let i = 0, l = options.length; i < l; i += 1) {\n//       if (options[i].selected) {\n//         value.push(options[i].value);\n//       }\n//     }\n//     setPersonName(value);\n//   };\n//   return (\n//     <div>\n//       <FormControl className={classes.formControl}>\n//         <InputLabel shrink htmlFor=\"select-multiple-native\">\n//           Select Tags\n//         </InputLabel>\n//         <Select\n//           multiple\n//           native\n//           value={personName}\n//           onChange={handleChangeMultiple}\n//           inputProps={{\n//             id: \"select-multiple-native\",\n//           }}\n//         >\n//           {topics.map((topic) => (\n//             <option key={topic.name} value={topic.name}>\n//               {topic.name}\n//             </option>\n//           ))}\n//         </Select>\n//       </FormControl>\n//     </div>\n//   );\n// }\n// const MapStateToProps = (state) => {\n//   return {\n//     topics: state.topics,\n//   };\n// };\n// // Setup Dispatch for our button events.\n// const MapDispatchToProps = (dispatch) => {\n//   return {\n//     fetchTopics: () => dispatch(fetchTopics),\n//   };\n// };\n// export default connect(MapStateToProps, MapDispatchToProps)(Tags);\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(0.5)\n    }\n  }\n}));\nexport default function Tags() {\n  const classes = useStyles();\n\n  const handleDelete = () => {\n    console.info(\"You clicked the delete icon.\");\n  };\n\n  const handleClick = () => {\n    console.info(\"You clicked the Chip.\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Chip, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, \"M\"),\n    label: \"Primary clickable\",\n    clickable: true,\n    color: \"primary\",\n    onDelete: handleDelete,\n    deleteIcon: /*#__PURE__*/React.createElement(DoneIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/Hitesh/Desktop/DiveIn/dive-in/src/components/common/Tags.js"],"names":["React","makeStyles","Avatar","Chip","FaceIcon","DoneIcon","useStyles","theme","root","display","justifyContent","flexWrap","margin","spacing","Tags","classes","handleDelete","console","info","handleClick"],"mappingskB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,QAAQ,EAAE,MAHN;AAIJ,aAAS;AACPC,MAAAA,MAAM,EAAEL,KAAK,CAACM,OAAN,CAAc,GAAd;AADD;AAJL;AADiC,CAAZ,CAAD,CAA5B;AAWA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAMC,OAAO,GAAGT,SAAS,EAAzB;;AAEA,QAAMU,YAAY,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,IAAR,CAAa,8BAAb;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAACC,IAAR,CAAa,uBAAb;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACP,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,MAAM,eAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADV;AAEE,IAAA,KAAK,EAAC,mBAFR;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,QAAQ,EAAEQ,YALZ;AAME,IAAA,UAAU,eAAE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AA2BD","sourcesContent":["// import React, { useEffect } from \"react\";\n// import { connect } from \"react-redux\";\n// import fetchTopics from \"../../store/actions/fetchTopics\";\n// import clsx from \"clsx\";\n// import { makeStyles, useTheme } from \"@material-ui/core/styles\";\n// import Input from \"@material-ui/core/Input\";\n// import InputLabel from \"@material-ui/core/InputLabel\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\n// import FormControl from \"@material-ui/core/FormControl\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\n// import Select from \"@material-ui/core/Select\";\n// import Checkbox from \"@material-ui/core/Checkbox\";\n// import Chip from \"@material-ui/core/Chip\";\n\n// const useStyles = makeStyles((theme) => ({\n//   formControl: {\n//     margin: theme.spacing(1),\n//     minWidth: 120,\n//     maxWidth: 300,\n//   },\n//   chips: {\n//     display: \"flex\",\n//     flexWrap: \"wrap\",\n//   },\n//   chip: {\n//     margin: 2,\n//   },\n//   noLabel: {\n//     marginTop: theme.spacing(3),\n//   },\n// }));\n\n// const ITEM_HEIGHT = 48;\n// const ITEM_PADDING_TOP = 8;\n// const MenuProps = {\n//   PaperProps: {\n//     style: {\n//       maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n//       width: 250,\n//     },\n//   },\n// };\n\n// const names = [\n//   \"Oliver Hansen\",\n//   \"Van Henry\",\n//   \"April Tucker\",\n//   \"Ralph Hubbard\",\n//   \"Omar Alexander\",\n//   \"Carlos Abbott\",\n//   \"Miriam Wagner\",\n//   \"Bradley Wilkerson\",\n//   \"Virginia Andrews\",\n//   \"Kelly Snyder\",\n// ];\n\n// function getStyles(name, personName, theme) {\n//   return {\n//     fontWeight:\n//       personName.indexOf(name) === -1\n//         ? theme.typography.fontWeightRegular\n//         : theme.typography.fontWeightMedium,\n//   };\n// }\n\n// function Tags(props) {\n//   useEffect(() => {\n//     // Update the document title using the browser API\n//     props.fetchTopics();\n//   }, []);\n//   console.log(props.topics, \"articles working cool\");\n//   const { topics } = props;\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [personName, setPersonName] = React.useState([]);\n\n//   const handleChange = (event) => {\n//     setPersonName(event.target.value);\n//   };\n\n//   const handleChangeMultiple = (event) => {\n//     const { options } = event.target;\n//     const value = [];\n//     for (let i = 0, l = options.length; i < l; i += 1) {\n//       if (options[i].selected) {\n//         value.push(options[i].value);\n//       }\n//     }\n//     setPersonName(value);\n//   };\n\n//   return (\n//     <div>\n//       <FormControl className={classes.formControl}>\n//         <InputLabel shrink htmlFor=\"select-multiple-native\">\n//           Select Tags\n//         </InputLabel>\n//         <Select\n//           multiple\n//           native\n//           value={personName}\n//           onChange={handleChangeMultiple}\n//           inputProps={{\n//             id: \"select-multiple-native\",\n//           }}\n//         >\n//           {topics.map((topic) => (\n//             <option key={topic.name} value={topic.name}>\n//               {topic.name}\n//             </option>\n//           ))}\n//         </Select>\n//       </FormControl>\n//     </div>\n//   );\n// }\n\n// const MapStateToProps = (state) => {\n//   return {\n//     topics: state.topics,\n//   };\n// };\n\n// // Setup Dispatch for our button events.\n// const MapDispatchToProps = (dispatch) => {\n//   return {\n//     fetchTopics: () => dispatch(fetchTopics),\n//   };\n// };\n\n// export default connect(MapStateToProps, MapDispatchToProps)(Tags);\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(0.5),\n    },\n  },\n}));\n\nexport default function Tags() {\n  const classes = useStyles();\n\n  const handleDelete = () => {\n    console.info(\"You clicked the delete icon.\");\n  };\n\n  const handleClick = () => {\n    console.info(\"You clicked the Chip.\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <Chip\n        avatar={<Avatar>M</Avatar>}\n        label=\"Primary clickable\"\n        clickable\n        color=\"primary\"\n        onDelete={handleDelete}\n        deleteIcon={<DoneIcon />}\n      />\n      {/* <Chip\n        icon={<FaceIcon />}\n        label=\"Primary clickable\"\n        clickable\n        color=\"primary\"\n        onDelete={handleDelete}\n        deleteIcon={<DoneIcon />}\n      />\n      <Chip label=\"Deletable primary\" onDelete={handleDelete} color=\"primary\" />\n      <Chip\n        icon={<FaceIcon />}\n        label=\"Deletable secondary\"\n        onDelete={handleDelete}\n        color=\"secondary\"\n      /> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}