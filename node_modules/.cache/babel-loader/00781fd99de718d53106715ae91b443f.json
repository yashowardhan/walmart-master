{"ast":null,"code":"var _jsxFileName = \"/Users/Hitesh/Desktop/DiveIn/dive-in/src/components/card/Card.js\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { connect } from \"react-redux\";\nimport updatePosts from \"../../store/actions/updatePosts\";\nimport fetchUsers from \"../../store/actions/fetchUsers\";\nimport fetchArticles from \"../../store/actions/fetchArticles\";\nimport Popup from \"../common/Popup\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n});\n\nfunction MediaCard(props) {\n  const classes = useStyles(); // Similar to componentDidMount and componentDidUpdate:\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    props.fetchUsers();\n    props.fetchArticles();\n  }, []);\n  console.log(props.articles);\n  const {\n    users\n  } = props;\n  console.log(users, \"data in props\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"parent-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, users.map(user => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: user.imageUrl,\n    title: \"Contemplative Reptile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, user.name), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"p\",\n    style: {\n      color: \"#3f51b5\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, user.author, \" - \", user.authorDescription), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, user.description))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: props.fetchUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Share\"), /*#__PURE__*/React.createElement(Popup, {\n    url: user.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })))))));\n} //Make State accessible to movies and users in App.\n\n\nconst MapStateToProps = state => {\n  return {\n    posts: state.posts,\n    users: state.users,\n    articles: state.articles\n  };\n}; // Setup Dispatch for our button events.\n\n\nconst MapDispatchToProps = dispatch => {\n  return {\n    updatePosts: () => dispatch(updatePosts),\n    fetchUsers: () => dispatch(fetchUsers),\n    fetchArticles: () => dispatch(fetchArticles)\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(MediaCard);","map":{"version":3,"sources":["/Users/Hitesh/Desktop/DiveIn/dive-in/src/components/card/Card.js"],"names":["React","useEffect","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","connect","updatePosts","fetchUsers","fetchArticles","Popup","useStyles","root","maxWidth","media","height","MediaCard","props","classes","console","log","articles","users","map","user","imageUrl","name","color","author","authorDescription","description","url","MapStateToProps","state","posts","MapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { connect } from \"react-redux\";\nimport updatePosts from \"../../store/actions/updatePosts\";\nimport fetchUsers from \"../../store/actions/fetchUsers\";\nimport fetchArticles from \"../../store/actions/fetchArticles\";\nimport Popup from \"../common/Popup\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nfunction MediaCard(props) {\n  const classes = useStyles();\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    // Update the document title using the browser API\n    props.fetchUsers();\n    props.fetchArticles();\n  }, []);\n  console.log(props.articles);\n  const { users } = props;\n  console.log(users, \"data in props\");\n  return (\n    <div className=\"parent-card\">\n      {users.map((user) => (\n        <div className=\"card-box\">\n          <React.Fragment>\n            <Card className={classes.root}>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image={user.imageUrl}\n                  title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {user.name}\n                  </Typography>\n                  <Typography\n                    gutterBottom\n                    variant=\"h5\"\n                    component=\"p\"\n                    style={{ color: \"#3f51b5\" }}\n                  >\n                    {user.author} - {user.authorDescription}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    {user.description}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Button size=\"small\" color=\"primary\" onClick={props.fetchUsers}>\n                  Share\n                </Button>\n                <Popup url={user.url}></Popup>\n              </CardActions>\n            </Card>\n          </React.Fragment>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n//Make State accessible to movies and users in App.\nconst MapStateToProps = (state) => {\n  return {\n    posts: state.posts,\n    users: state.users,\n    articles: state.articles,\n  };\n};\n\n// Setup Dispatch for our button events.\nconst MapDispatchToProps = (dispatch) => {\n  return {\n    updatePosts: () => dispatch(updatePosts),\n    fetchUsers: () => dispatch(fetchUsers),\n    fetchArticles: () => dispatch(fetchArticles),\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(MediaCard);\n"]},"metadata":{},"sourceType":"module"}