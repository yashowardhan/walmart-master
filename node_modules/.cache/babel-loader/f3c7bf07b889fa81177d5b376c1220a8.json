{"ast":null,"code":"var _jsxFileName = \"/Users/Hitesh/Desktop/walmart-master/src/components/card/Card.js\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ThumbDownAltIcon from \"@material-ui/icons/ThumbDownAlt\";\nimport { connect } from \"react-redux\";\nimport updatePosts from \"../../store/actions/updatePosts\";\nimport fetchUsers from \"../../store/actions/fetchUsers\";\nimport fetchArticles from \"../../store/actions/fetchArticles\";\nimport Popup from \"../common/Popup\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n});\n\nfunction MediaCard(props) {\n  const classes = useStyles(); // Similar to componentDidMount and componentDidUpdate:\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    props.fetchArticles();\n  }, []);\n  console.log(props.articles, \"articles working cool\");\n  const {\n    articles\n  } = props; //console.log(users, \"data in props\");\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"parent-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, articles.map(article => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      \"aria-label\": \"recipe\",\n      className: classes.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }, \"W\"),\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `products/edit/${article.productId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }\n    }))),\n    title: article.productName //subheader=\"September 14, 2016\"\n    ,\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: article.productImage,\n    title: article.productName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, article.shortDescription)), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Rating, {\n    name: \"simple-controlled\",\n    value: article.reviewRating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    display: \"block\",\n    variant: \"caption\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, article.productPrice), /*#__PURE__*/React.createElement(Typography, {\n    display: \"block\",\n    variant: \"caption\",\n    color: \"textPrimary\",\n    style: {\n      marginLeft: \"40rem\",\n      fontSize: \"18px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, article.productInStock)))))));\n} //Make State accessible to movies and users in App.\n\n\nconst MapStateToProps = state => {\n  return {\n    posts: state.posts,\n    users: state.users,\n    articles: state.articles\n  };\n}; // Setup Dispatch for our button events.\n\n\nconst MapDispatchToProps = dispatch => {\n  return {\n    updatePosts: () => dispatch(updatePosts),\n    fetchUsers: () => dispatch(fetchUsers),\n    fetchArticles: () => dispatch(fetchArticles)\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(MediaCard);","map":{"version":3,"sources":["/Users/Hitesh/Desktop/walmart-master/src/components/card/Card.js"],"names":["React","useEffect","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","IconButton","FavoriteIcon","ShareIcon","ThumbUpIcon","ThumbDownAltIcon","connect","updatePosts","fetchUsers","fetchArticles","Popup","useStyles","root","maxWidth","media","height","MediaCard","props","classes","console","log","articles","map","article","avatar","productId","productName","textAlign","productImage","shortDescription","reviewRating","productPrice","marginLeft","fontSize","productInStock","MapStateToProps","state","posts","users","MapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ThumbDownAltIcon from \"@material-ui/icons/ThumbDownAlt\";\nimport { connect } from \"react-redux\";\nimport updatePosts from \"../../store/actions/updatePosts\";\nimport fetchUsers from \"../../store/actions/fetchUsers\";\nimport fetchArticles from \"../../store/actions/fetchArticles\";\nimport Popup from \"../common/Popup\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nfunction MediaCard(props) {\n  const classes = useStyles();\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    // Update the document title using the browser API\n    props.fetchArticles();\n  }, []);\n  console.log(props.articles, \"articles working cool\");\n  const { articles } = props;\n  //console.log(users, \"data in props\");\n  return (\n    <div className=\"parent-card\">\n      {articles.map((article) => (\n        <div className=\"card-box\">\n          <React.Fragment>\n            <Card className={classes.root}>\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                    W\n                  </Avatar>\n                }\n                action={\n                  <IconButton aria-label=\"settings\">\n                    <Link to={`products/edit/${article.productId}`}>\n                      <MoreVertIcon />\n                    </Link>\n                  </IconButton>\n                }\n                title={article.productName}\n                //subheader=\"September 14, 2016\"\n                style={{ textAlign: \"left\" }}\n              />\n              <CardMedia\n                className={classes.media}\n                image={article.productImage}\n                title={article.productName}\n              />\n              <CardContent>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  component=\"p\"\n                  style={{ textAlign: \"left\" }}\n                >\n                  {article.shortDescription}\n                </Typography>\n              </CardContent>\n              <CardActions>\n                <Rating name=\"simple-controlled\" value={article.reviewRating} />\n                <Typography\n                  display=\"block\"\n                  variant=\"caption\"\n                  color=\"textPrimary\"\n                >\n                  {article.productPrice}\n                </Typography>\n                <Typography\n                  display=\"block\"\n                  variant=\"caption\"\n                  color=\"textPrimary\"\n                  style={{ marginLeft: \"40rem\", fontSize: \"18px\" }}\n                >\n                  {article.productInStock}\n                </Typography>\n              </CardActions>\n            </Card>\n          </React.Fragment>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n//Make State accessible to movies and users in App.\nconst MapStateToProps = (state) => {\n  return {\n    posts: state.posts,\n    users: state.users,\n    articles: state.articles,\n  };\n};\n\n// Setup Dispatch for our button events.\nconst MapDispatchToProps = (dispatch) => {\n  return {\n    updatePosts: () => dispatch(updatePosts),\n    fetchUsers: () => dispatch(fetchUsers),\n    fetchArticles: () => dispatch(fetchArticles),\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(MediaCard);\n"]},"metadata":{},"sourceType":"module"}