{"ast":null,"code":"import * as types from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\nexport default function suggestionReducer(state = initialState.courses, action) {\n  switch (action.type) {\n    case types.CREATE_SUGGESTION_SUCCESS:\n      return [...state, { ...action.course\n      }];\n\n    case types.UPDATE_SUGGESTION_SUCCESS:\n      return state.map(course => course.id === action.course.id ? action.course : course);\n\n    case types.LOAD_SUGGESTION_SUCCESS:\n      return action.courses;\n\n    case types.DELETE_COURSE_OPTIMISTIC:\n      return state.filter(course => course.id !== action.course.id);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/Hitesh/Desktop/DiveIn/dive-in/src/redux/reducers/suggestionReducer.js"],"names":["types","initialState","suggestionReducer","state","courses","action","type","CREATE_SUGGESTION_SUCCESS","course","UPDATE_SUGGESTION_SUCCESS","map","id","LOAD_SUGGESTION_SUCCESS","DELETE_COURSE_OPTIMISTIC","filter"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,SAASC,iBAAT,CACbC,KAAK,GAAGF,YAAY,CAACG,OADR,EAEbC,MAFa,EAGb;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,KAAK,CAACO,yBAAX;AACE,aAAO,CAAC,GAAGJ,KAAJ,EAAW,EAAE,GAAGE,MAAM,CAACG;AAAZ,OAAX,CAAP;;AACF,SAAKR,KAAK,CAACS,yBAAX;AACE,aAAON,KAAK,CAACO,GAAN,CAAWF,MAAD,IACfA,MAAM,CAACG,EAAP,KAAcN,MAAM,CAACG,MAAP,CAAcG,EAA5B,GAAiCN,MAAM,CAACG,MAAxC,GAAiDA,MAD5C,CAAP;;AAGF,SAAKR,KAAK,CAACY,uBAAX;AACE,aAAOP,MAAM,CAACD,OAAd;;AACF,SAAKJ,KAAK,CAACa,wBAAX;AACE,aAAOV,KAAK,CAACW,MAAN,CAAcN,MAAD,IAAYA,MAAM,CAACG,EAAP,KAAcN,MAAM,CAACG,MAAP,CAAcG,EAArD,CAAP;;AACF;AACE,aAAOR,KAAP;AAZJ;AAcD","sourcesContent":["import * as types from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\n\nexport default function suggestionReducer(\n  state = initialState.courses,\n  action\n) {\n  switch (action.type) {\n    case types.CREATE_SUGGESTION_SUCCESS:\n      return [...state, { ...action.course }];\n    case types.UPDATE_SUGGESTION_SUCCESS:\n      return state.map((course) =>\n        course.id === action.course.id ? action.course : course\n      );\n    case types.LOAD_SUGGESTION_SUCCESS:\n      return action.courses;\n    case types.DELETE_COURSE_OPTIMISTIC:\n      return state.filter((course) => course.id !== action.course.id);\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}