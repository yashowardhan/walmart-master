{"ast":null,"code":"var _jsxFileName = \"/Users/Hitesh/Desktop/DiveIn/dive-in/src/components/common/Tags.js\";\n// import React, { useEffect } from \"react\";\n// import { connect } from \"react-redux\";\n// import fetchTopics from \"../../store/actions/fetchTopics\";\n// import { Button } from \"@material-ui/core\";\n// function Tags(props) {\n//   useEffect(() => {\n//     // Update the document title using the browser API\n//     props.fetchTopics();\n//   }, []);\n//   console.log(props.topics, \"articles working cool\");\n//   const { topics } = props;\n//   return (\n//     <div>\n//       <h1>Select Tags</h1>\n//       {topics.map((topic) => {\n//         return <li>{topic.name}</li>;\n//       })}\n//     </div>\n//   );\n// }\n// const MapStateToProps = (state) => {\n//   return {\n//     topics: state.topics,\n//   };\n// };\n// // Setup Dispatch for our button events.\n// const MapDispatchToProps = (dispatch) => {\n//   return {\n//     fetchTopics: () => dispatch(fetchTopics),\n//   };\n// };\n// export default connect(MapStateToProps, MapDispatchToProps)(Tags);\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Chip from \"@material-ui/core/Chip\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    margin: 2\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = [\"Oliver Hansen\", \"Van Henry\", \"April Tucker\", \"Ralph Hubbard\", \"Omar Alexander\", \"Carlos Abbott\", \"Miriam Wagner\", \"Bradley Wilkerson\", \"Virginia Andrews\", \"Kelly Snyder\"];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nfunction Tags(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = event => {\n    setPersonName(event.target.value);\n  };\n\n  const handleChangeMultiple = event => {\n    const {\n      options\n    } = event.target;\n    const value = [];\n\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n\n    setPersonName(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-mutiple-name-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-mutiple-name-label\",\n    id: \"demo-mutiple-name\",\n    multiple: true,\n    value: personName,\n    onChange: handleChange,\n    input: /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 18\n      }\n    }),\n    MenuProps: MenuProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, names.map(name => /*#__PURE__*/React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    style: getStyles(name, personName, theme),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, name)))), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-mutiple-checkbox-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, \"Tag\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-mutiple-checkbox-label\",\n    id: \"demo-mutiple-checkbox\",\n    multiple: true,\n    value: personName,\n    onChange: handleChange,\n    input: /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 18\n      }\n    }),\n    renderValue: selected => selected.join(\", \"),\n    MenuProps: MenuProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, names.map(name => /*#__PURE__*/React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: personName.indexOf(name) > -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-mutiple-chip-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, \"Chip\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-mutiple-chip-label\",\n    id: \"demo-mutiple-chip\",\n    multiple: true,\n    value: personName,\n    onChange: handleChange,\n    input: /*#__PURE__*/React.createElement(Input, {\n      id: \"select-multiple-chip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 18\n      }\n    }),\n    renderValue: selected => /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chips,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, selected.map(value => /*#__PURE__*/React.createElement(Chip, {\n      key: value,\n      label: value,\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }))),\n    MenuProps: MenuProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, names.map(name => /*#__PURE__*/React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    style: getStyles(name, personName, theme),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, name)))), /*#__PURE__*/React.createElement(FormControl, {\n    className: clsx(classes.formControl, classes.noLabel),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    multiple: true,\n    displayEmpty: true,\n    value: personName,\n    onChange: handleChange,\n    input: /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 18\n      }\n    }),\n    renderValue: selected => {\n      if (selected.length === 0) {\n        return /*#__PURE__*/React.createElement(\"em\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 22\n          }\n        }, \"Placeholder\");\n      }\n\n      return selected.join(\", \");\n    },\n    MenuProps: MenuProps,\n    inputProps: {\n      \"aria-label\": \"Without label\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    disabled: true,\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, \"Placeholder\")), names.map(name => /*#__PURE__*/React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    style: getStyles(name, personName, theme),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, name)))), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    shrink: true,\n    htmlFor: \"select-multiple-native\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, \"Native\"), /*#__PURE__*/React.createElement(Select, {\n    multiple: true,\n    native: true,\n    value: personName,\n    onChange: handleChangeMultiple,\n    inputProps: {\n      id: \"select-multiple-native\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, names.map(name => /*#__PURE__*/React.createElement(\"option\", {\n    key: name,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, name)))));\n}\n\nconst MapStateToProps = state => {\n  return {\n    topics: state.topics\n  };\n}; // Setup Dispatch for our button events.\n\n\nconst MapDispatchToProps = dispatch => {\n  return {\n    fetchTopics: () => dispatch(fetchTopics)\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(Tags);","map":{"version":3,"sources":["/Users/Hitesh/Desktop/DiveIn/dive-in/src/components/common/Tags.js"],"names":["React","clsx","makeStyles","useTheme","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","Chip","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","getStyles","name","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","Tags","props","classes","setPersonName","useState","handleChange","event","target","value","handleChangeMultiple","options","i","l","length","selected","push","map","join","id","MapStateToProps","state","topics","MapDispatchToProps","dispatch","fetchTopics","connect"],"mappings":"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","sourcesContent":["// import React, { useEffect } from \"react\";\n// import { connect } from \"react-redux\";\n// import fetchTopics from \"../../store/actions/fetchTopics\";\n// import { Button } from \"@material-ui/core\";\n\n// function Tags(props) {\n//   useEffect(() => {\n//     // Update the document title using the browser API\n//     props.fetchTopics();\n//   }, []);\n//   console.log(props.topics, \"articles working cool\");\n//   const { topics } = props;\n//   return (\n//     <div>\n//       <h1>Select Tags</h1>\n//       {topics.map((topic) => {\n//         return <li>{topic.name}</li>;\n//       })}\n//     </div>\n//   );\n// }\n// const MapStateToProps = (state) => {\n//   return {\n//     topics: state.topics,\n//   };\n// };\n\n// // Setup Dispatch for our button events.\n// const MapDispatchToProps = (dispatch) => {\n//   return {\n//     fetchTopics: () => dispatch(fetchTopics),\n//   };\n// };\n\n// export default connect(MapStateToProps, MapDispatchToProps)(Tags);\n\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Chip from \"@material-ui/core/Chip\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  \"Oliver Hansen\",\n  \"Van Henry\",\n  \"April Tucker\",\n  \"Ralph Hubbard\",\n  \"Omar Alexander\",\n  \"Carlos Abbott\",\n  \"Miriam Wagner\",\n  \"Bradley Wilkerson\",\n  \"Virginia Andrews\",\n  \"Kelly Snyder\",\n];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nfunction Tags(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    setPersonName(event.target.value);\n  };\n\n  const handleChangeMultiple = (event) => {\n    const { options } = event.target;\n    const value = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    setPersonName(value);\n  };\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-mutiple-name-label\">Name</InputLabel>\n        <Select\n          labelId=\"demo-mutiple-name-label\"\n          id=\"demo-mutiple-name\"\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<Input />}\n          MenuProps={MenuProps}\n        >\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-mutiple-checkbox-label\">Tag</InputLabel>\n        <Select\n          labelId=\"demo-mutiple-checkbox-label\"\n          id=\"demo-mutiple-checkbox\"\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<Input />}\n          renderValue={(selected) => selected.join(\", \")}\n          MenuProps={MenuProps}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              <Checkbox checked={personName.indexOf(name) > -1} />\n              <ListItemText primary={name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-mutiple-chip-label\">Chip</InputLabel>\n        <Select\n          labelId=\"demo-mutiple-chip-label\"\n          id=\"demo-mutiple-chip\"\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<Input id=\"select-multiple-chip\" />}\n          renderValue={(selected) => (\n            <div className={classes.chips}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} className={classes.chip} />\n              ))}\n            </div>\n          )}\n          MenuProps={MenuProps}\n        >\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={clsx(classes.formControl, classes.noLabel)}>\n        <Select\n          multiple\n          displayEmpty\n          value={personName}\n          onChange={handleChange}\n          input={<Input />}\n          renderValue={(selected) => {\n            if (selected.length === 0) {\n              return <em>Placeholder</em>;\n            }\n\n            return selected.join(\", \");\n          }}\n          MenuProps={MenuProps}\n          inputProps={{ \"aria-label\": \"Without label\" }}\n        >\n          <MenuItem disabled value=\"\">\n            <em>Placeholder</em>\n          </MenuItem>\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel shrink htmlFor=\"select-multiple-native\">\n          Native\n        </InputLabel>\n        <Select\n          multiple\n          native\n          value={personName}\n          onChange={handleChangeMultiple}\n          inputProps={{\n            id: \"select-multiple-native\",\n          }}\n        >\n          {names.map((name) => (\n            <option key={name} value={name}>\n              {name}\n            </option>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n\nconst MapStateToProps = (state) => {\n  return {\n    topics: state.topics,\n  };\n};\n\n// Setup Dispatch for our button events.\nconst MapDispatchToProps = (dispatch) => {\n  return {\n    fetchTopics: () => dispatch(fetchTopics),\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(Tags);\n"]},"metadata":{},"sourceType":"module"}