{"ast":null,"code":"var _jsxFileName = \"/Users/Hitesh/Desktop/DiveIn/dive-in/src/components/card/Card.js\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { connect } from \"react-redux\";\nimport updatePosts from \"../../store/actions/updatePosts\";\nimport fetchUsers from \"../../store/actions/fetchUsers\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n});\n\nfunction MediaCard(props) {\n  const classes = useStyles(); // Similar to componentDidMount and componentDidUpdate:\n  // useEffect(() => {\n  //   // Update the document title using the browser API\n  //   updatePosts();\n  // });\n\n  console.log(props);\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: \"https://material-ui.com/static/images/cards/contemplative-reptile.jpg\",\n    title: \"Contemplative Reptile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, props.posts.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\"))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: props.fetchUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Share\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Learn More\")));\n} // //Render Redux Cycle into App\n// function App(props) {\n//   return (\n//     <div className=\"App\">\n//       <h3>REDUX MOVIELIST APP</h3>\n//       <br/>\n//       <span\n//       style={{color:'green'}}\n//       >YOUR CURRENT MOVIE IS: </span>{props.movies.name}\n//       <br/>\n//       <p><button onClick={props.updateMovies}>SELECT NEW MOVIE</button></p>\n//       <br/>\n//       {props.users.length === 0 ?\n//       <p>THERE ARE NO USERS</p> :\n//       props.users.map(user=> <p key={user.id}>{user.first_name} - {user.email}</p>)}\n//       <br/>\n//       <button onClick={props.fetchUsers}>FETCH USERS</button>\n//     </div>\n//   );\n// };\n//Make State accessible to movies and users in App.\n\n\nconst MapStateToProps = state => {\n  return {\n    posts: state.posts,\n    users: state.users\n  };\n}; // Setup Dispatch for our button events.\n\n\nconst MapDispatchToProps = dispatch => {\n  return {\n    updatePosts: () => dispatch(updatePosts),\n    fetchUsers: () => dispatch(fetchUsers)\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(MediaCard);","map":{"version":3,"sources":["/Users/Hitesh/Desktop/DiveIn/dive-in/src/components/card/Card.js"],"names":["React","useEffect","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","connect","updatePosts","fetchUsers","useStyles","root","maxWidth","media","height","MediaCard","props","classes","console","log","posts","name","MapStateToProps","state","users","MapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { connect } from \"react-redux\";\nimport updatePosts from \"../../store/actions/updatePosts\";\nimport fetchUsers from \"../../store/actions/fetchUsers\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nfunction MediaCard(props) {\n  const classes = useStyles();\n  // Similar to componentDidMount and componentDidUpdate:\n  // useEffect(() => {\n  //   // Update the document title using the browser API\n  //   updatePosts();\n  // });\n  console.log(props);\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image=\"https://material-ui.com/static/images/cards/contemplative-reptile.jpg\"\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.posts.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Lizards are a widespread group of squamate reptiles, with over 6,000\n            species, ranging across all continents except Antarctica\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={props.fetchUsers}>\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\n// //Render Redux Cycle into App\n// function App(props) {\n//   return (\n//     <div className=\"App\">\n//       <h3>REDUX MOVIELIST APP</h3>\n//       <br/>\n//       <span\n//       style={{color:'green'}}\n//       >YOUR CURRENT MOVIE IS: </span>{props.movies.name}\n//       <br/>\n//       <p><button onClick={props.updateMovies}>SELECT NEW MOVIE</button></p>\n//       <br/>\n//       {props.users.length === 0 ?\n//       <p>THERE ARE NO USERS</p> :\n//       props.users.map(user=> <p key={user.id}>{user.first_name} - {user.email}</p>)}\n//       <br/>\n//       <button onClick={props.fetchUsers}>FETCH USERS</button>\n//     </div>\n//   );\n// };\n\n//Make State accessible to movies and users in App.\nconst MapStateToProps = (state) => {\n  return {\n    posts: state.posts,\n    users: state.users,\n  };\n};\n\n// Setup Dispatch for our button events.\nconst MapDispatchToProps = (dispatch) => {\n  return {\n    updatePosts: () => dispatch(updatePosts),\n    fetchUsers: () => dispatch(fetchUsers),\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(MediaCard);\n"]},"metadata":{},"sourceType":"module"}