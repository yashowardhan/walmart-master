{"ast":null,"code":"var _jsxFileName = \"/Users/Hitesh/Desktop/DiveIn/dive-in/src/components/common/Tags.js\";\n// import React, { useEffect } from \"react\";\n// import { connect } from \"react-redux\";\n// import fetchTopics from \"../../store/actions/fetchTopics\";\n// import { Button } from \"@material-ui/core\";\n// function Tags(props) {\n//   useEffect(() => {\n//     // Update the document title using the browser API\n//     props.fetchTopics();\n//   }, []);\n//   console.log(props.topics, \"articles working cool\");\n//   const { topics } = props;\n//   return (\n//     <div>\n//       <h1>Select Tags</h1>\n//       {topics.map((topic) => {\n//         return <li>{topic.name}</li>;\n//       })}\n//     </div>\n//   );\n// }\n// const MapStateToProps = (state) => {\n//   return {\n//     topics: state.topics,\n//   };\n// };\n// // Setup Dispatch for our button events.\n// const MapDispatchToProps = (dispatch) => {\n//   return {\n//     fetchTopics: () => dispatch(fetchTopics),\n//   };\n// };\n// export default connect(MapStateToProps, MapDispatchToProps)(Tags);\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport fetchTopics from \"../../store/actions/fetchTopics\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Chip from \"@material-ui/core/Chip\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    margin: 2\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = [\"Oliver Hansen\", \"Van Henry\", \"April Tucker\", \"Ralph Hubbard\", \"Omar Alexander\", \"Carlos Abbott\", \"Miriam Wagner\", \"Bradley Wilkerson\", \"Virginia Andrews\", \"Kelly Snyder\"];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nfunction Tags(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = event => {\n    setPersonName(event.target.value);\n  };\n\n  const handleChangeMultiple = event => {\n    const {\n      options\n    } = event.target;\n    const value = [];\n\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n\n    setPersonName(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    shrink: true,\n    htmlFor: \"select-multiple-native\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Native\"), /*#__PURE__*/React.createElement(Select, {\n    multiple: true,\n    native: true,\n    value: personName,\n    onChange: handleChangeMultiple,\n    inputProps: {\n      id: \"select-multiple-native\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, names.map(name => /*#__PURE__*/React.createElement(\"option\", {\n    key: name,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, name)))));\n}\n\nconst MapStateToProps = state => {\n  return {\n    topics: state.topics\n  };\n}; // Setup Dispatch for our button events.\n\n\nconst MapDispatchToProps = dispatch => {\n  return {\n    fetchTopics: () => dispatch(fetchTopics)\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(Tags);","map":{"version":3,"sources":["/Users/Hitesh/Desktop/DiveIn/dive-in/src/components/common/Tags.js"],"names":["React","useEffect","connect","fetchTopics","clsx","makeStyles","useTheme","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","Chip","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","getStyles","name","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","Tags","props","classes","setPersonName","useState","handleChange","event","target","value","handleChangeMultiple","options","i","l","length","selected","push","id","map","MapStateToProps","state","topics","MapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["// import React, { useEffect } from \"react\";\n// import { connect } from \"react-redux\";\n// import fetchTopics from \"../../store/actions/fetchTopics\";\n// import { Button } from \"@material-ui/core\";\n\n// function Tags(props) {\n//   useEffect(() => {\n//     // Update the document title using the browser API\n//     props.fetchTopics();\n//   }, []);\n//   console.log(props.topics, \"articles working cool\");\n//   const { topics } = props;\n//   return (\n//     <div>\n//       <h1>Select Tags</h1>\n//       {topics.map((topic) => {\n//         return <li>{topic.name}</li>;\n//       })}\n//     </div>\n//   );\n// }\n// const MapStateToProps = (state) => {\n//   return {\n//     topics: state.topics,\n//   };\n// };\n\n// // Setup Dispatch for our button events.\n// const MapDispatchToProps = (dispatch) => {\n//   return {\n//     fetchTopics: () => dispatch(fetchTopics),\n//   };\n// };\n\n// export default connect(MapStateToProps, MapDispatchToProps)(Tags);\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport fetchTopics from \"../../store/actions/fetchTopics\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Chip from \"@material-ui/core/Chip\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  \"Oliver Hansen\",\n  \"Van Henry\",\n  \"April Tucker\",\n  \"Ralph Hubbard\",\n  \"Omar Alexander\",\n  \"Carlos Abbott\",\n  \"Miriam Wagner\",\n  \"Bradley Wilkerson\",\n  \"Virginia Andrews\",\n  \"Kelly Snyder\",\n];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nfunction Tags(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    setPersonName(event.target.value);\n  };\n\n  const handleChangeMultiple = (event) => {\n    const { options } = event.target;\n    const value = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    setPersonName(value);\n  };\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel shrink htmlFor=\"select-multiple-native\">\n          Native\n        </InputLabel>\n        <Select\n          multiple\n          native\n          value={personName}\n          onChange={handleChangeMultiple}\n          inputProps={{\n            id: \"select-multiple-native\",\n          }}\n        >\n          {names.map((name) => (\n            <option key={name} value={name}>\n              {name}\n            </option>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n\nconst MapStateToProps = (state) => {\n  return {\n    topics: state.topics,\n  };\n};\n\n// Setup Dispatch for our button events.\nconst MapDispatchToProps = (dispatch) => {\n  return {\n    fetchTopics: () => dispatch(fetchTopics),\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(Tags);\n"]},"metadata":{},"sourceType":"module"}